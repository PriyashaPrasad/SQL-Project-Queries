SELECT title, score
FROM hacker_news
ORDER BY score DESC
LIMIT 5;

--First, find the total score of all the stories.

select sum(score)
from hacker_news;

--Find the individual users who have gotten combined scores of more than 200, and their combined scores.

select user,sum(score)
from hacker_news
group by user
having sum(score)>200
order by sum(score) desc;

--Then, we want to add these users’ scores together and divide by the total to get the percentage.
select (517+309+304+282)/6366.0;

--How many times has each offending user posted this link?

select user, count(*)
from hacker_news
where url = 'https://www.youtube.com/watch?v=dQw4w9WgXcQ'
group by user
order by 2 desc;

--First, we want to categorize each story based on their source.
select CASE
   WHEN url LIKE '%github.com%' THEN 'GitHub'
    WHEN url LIKE '%medium.com%' THEN 'Medium'
     WHEN url LIKE '%nytimes.com%' THEN 'NY Times'
      else 'Not 3'
  END AS 'Source', 
count(*)
FROM hacker_news
group by 1;

-- 8
SELECT timestamp
FROM hacker_news
LIMIT 10;

--9

SELECT timestamp,
   strftime('%H', timestamp)
FROM hacker_news
GROUP BY 1
LIMIT 20;

/**This returns the hour, HH, of the timestamp column!

For strftime(__, timestamp):

%Y returns the year (YYYY)
%m returns the month (01-12)
%d returns the day of the month (1-31)
%H returns 24-hour clock (00-23)
%M returns the minute (00-59)
%S returns the seconds (00-59)
if timestamp format is YYYY-MM-DD HH:MM:SS.**/

--Let’s write a query that returns three columns:

select strftime('%H', timestamp) as 'hours', round(avg(score)), count(title) as 'no of articles'
FROM hacker_news
where timestamp is not null          
group by 1
order by 1;
                                      
                                        
